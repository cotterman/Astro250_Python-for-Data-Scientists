##############################################################################
################## Notes on running code #####################################
##############################################################################

#My code for this assignment is contained in GUI_using_traits.py
    #note: this main script uses functions from mpl_figure_editor.py

#First must install traits and traitsgui.  I did this as follows:
    #sudo aptitutde install python-traits
    #sudo aptitutde install python-traitsui
    #sudo aptitude install python-wxtools (I appeared to already have python-wxgtk2.8)
#Also uses urllib, which I installed for a previous assignment

#Code does all that was requested!  GUI should be self-explanatory.
    #note: there is a small delay when requesting to turn the image to gray-scale,
            but it should appear in gray-scale in less than a minute.


####################### Lessons Learned #######################################

If we begin a class definition with something like:
    class Circle(Shape):
then we are declaring that the class Circle shall inherit the attributes and methods from the class Shape.

HasTraits is a class which supports creating graphical representations of attributes. 
  #The HasTraits class enforces that the types of all the attributes are specified in the class definition.
  #The HasTraits objects have a configure_traits() method that brings up a dialog to edit 
    the objectsâ€™ attributes specified in its class definition.

I based my code largely on the excellent tutorial/example found here:
http://code.enthought.com/projects/traits/docs/html/tutorials/traits_ui_scientific_app.html
(I went thru this tutorial, taking notes and trying things out in the files tester1.py - tester6.py)
